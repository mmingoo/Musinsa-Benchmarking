<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.avengers.musinsa.mapper.ShippingAddressMapper">
    <select id="findByUserId" resultType="com.avengers.musinsa.domain.shipments.dto.ShippingAddressOrderDTO" parameterType="Long">
        SELECT
            ua.user_address_id AS shippingAddressId,
            ua.user_id AS userId,
            ua.recipient_name AS recipientName,
            ua.phone_number AS recipientPhone,
            ua.address_line1 || ' ' || ua.address_line2 AS recipientAddress,
            ua.postal AS postalCode,
            ua.is_default AS isDefault
        FROM user_addresses ua

        WHERE ua.user_id = #{userId}
        ORDER BY ua.is_default DESC, ua.user_address_id ASC
    </select>


    <insert id="insertShippingAddress"
            parameterType="com.avengers.musinsa.domain.shipments.dto.ShippingAddressCreateDTO">
        <selectKey keyProperty="shippingAddressId" resultType="Long" order="BEFORE">
           SELECT SEQ_USER_ADDRESSES.NEXTVAL FROM dual
        </selectKey>

        INSERT INTO user_addresses
            (user_address_id, user_id, recipient_name, phone_number,
            address_line1, address_line2, postal, is_default)
        VALUES
        (
            #{shippingAddressId},
            #{userId},
            #{recipientName},
            #{recipientPhone},
            #{addressLine1},
            #{addressLine2},
            #{postalCode},
            <choose>
                <when test="isDefault != null and isDefault">1</when>
               <otherwise>0</otherwise>
            </choose>
        )
    </insert>

    <select id="getShippingAddressDefault" parameterType="map" resultType="com.avengers.musinsa.domain.shipments.dto.ShippingAddressCreateDTO">
        SELECT
            ua.user_address_id as shippingAddressId,
            ua.user_id as userId,
            ua.recipient_name as recipientName,
            ua.phone_number as recipientPhone,
            ua.address_line1 as addressLine1,
            ua.address_line2 as addressLine2,
            ua.postal as postalCode,
            ua.is_default as isDefault
        FROM user_addresses ua
        WHERE ua.user_id = #{userId}
        AND ua.user_address_id = #{shippingAddressId}
    </select>


    <update id="updateShippingAddress">
        UPDATE user_addresses
        SET recipient_name = #{shippingAddressCreate.recipientName},
            phone_number   = #{shippingAddressCreate.recipientPhone},
            address_line1  = #{shippingAddressCreate.addressLine1},
            address_line2  = #{shippingAddressCreate.addressLine2},
            postal         = #{shippingAddressCreate.postalCode},
            is_default     =
                <choose>
                    <when test="shippingAddressCreate.isDefault != null and shippingAddressCreate.isDefault">1</when>
                    <otherwise>0</otherwise>
                </choose>
        WHERE user_address_id = #{shippingAddressId}
          AND user_id = #{userId}
    </update>

    <delete id="deleteShippingAddress">
        delete from user_addresses
        where user_address_id = #{shippingAddressId}
        AND user_id = #{userId}
    </delete>

    <!--기본 배송지 해제-->
    <update id="resetDefaultShippingAddress">
        UPDATE user_addresses
        SET is_default = 0
        WHERE user_id = #{userId}
    </update>


    <update id="setDefaultShippingAddress">
        UPDATE user_addresses
        SET is_default = 1
        WHERE user_address_id = #{shippingAddressId}
        AND user_id = #{userId}
    </update>





</mapper>
