# Spring Boot 애플리케이션 기본 설정
spring:

  # 애플리케이션 이름 설정
  application:
    name: ${SPRING_APPLICATION_NAME}

  jwt:
    secret: ${JWT_SECRET}

  # JSP 뷰 설정
  mvc:
    view:
      prefix: /WEB-INF/views/  # JSP 파일이 위치한 디렉토리 경로
      suffix: .jsp             # JSP 파일 확장자

  # 데이터베이스 연결 설정 (Oracle DB)
  datasource:
    url: ${SPRING_DATASOURCE_URL}
    driver-class-name: ${SPRING_DATASOURCE_DRIVER}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    dialect: org.hibernate.dialect.Oracle12cDialect

  # H2 콘솔 설정
  h2:
    console:
      enabled: ${SPRING_H2_CONSOLE_ENABLED:true}  # 기본값 true

  # JPA/Hibernate 설정
  jpa:
    database-platform: ${SPRING_JPA_DATABASE_PLATFORM}
    hibernate:
      ddl-auto: ${SPRING_JPA_HIBERNATE_DDL_AUTO}
    show-sql: ${SPRING_JPA_SHOW_SQL:true}

  # Redis 설정
  data:
    redis:
      host: ${SPRING_REDIS_HOST:localhost}
      port: ${SPRING_REDIS_PORT:6379}
      password: ${SPRING_REDIS_PASSWORD:}
      timeout: 3000ms
      lettuce:
        pool:
          max-active: 10
          max-idle: 10
          min-idle: 2
          max-wait: -1ms
        shutdown-timeout: 200ms


  # OAuth2 설정
  security:
    oauth2:
      client:
        registration:
          naver:
            client-name: ${OAUTH2_NAVER_CLIENT_NAME}
            client-id: ${OAUTH2_NAVER_CLIENT_ID}
            client-secret: ${OAUTH2_NAVER_CLIENT_SECRET}
            redirect-uri: ${OAUTH2_NAVER_REDIRECT_URI}
            authorization-grant-type: ${OAUTH2_NAVER_GRANT_TYPE}
            scope:
              - name
              - email
        provider:
          naver:
            authorization-uri: ${OAUTH2_NAVER_AUTH_URI}
            token-uri: ${OAUTH2_NAVER_TOKEN_URI}
            user-info-uri: ${OAUTH2_NAVER_USERINFO_URI}
            user-name-attribute: ${OAUTH2_NAVER_USER_NAME_ATTRIBUTE}

# MyBatis 설정
mybatis:
  mapper-locations: ${MYBATIS_MAPPER_LOCATIONS}
  type-aliases-package: ${MYBATIS_TYPE_ALIASES_PACKAGE}
  configuration:
    jdbc-type-for-null: NULL

# Actuator & Monitoring 설정
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: always
    metrics:
      enabled: true
    prometheus:
      enabled: true
  metrics:
    tags:
      application: ${SPRING_APPLICATION_NAME}
    distribution:
      percentiles-histogram:
        http.server.requests: true
  prometheus:
    metrics:
      export:
        enabled: true

# Logging 설정
logging:
  level:
    com.avengers.musinsa.mapper.BrandMapper: TRACE
    com.avengers.musinsa.mapper: TRACE
    com.avengers.musinsa.domain.search: DEBUG
    org.springframework.data.redis: INFO
    io.lettuce.core: INFO
    io.micrometer: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"